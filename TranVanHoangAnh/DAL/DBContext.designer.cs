#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLDoiBong")]
	public partial class DBContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblCauThu(tblCauThu instance);
    partial void UpdatetblCauThu(tblCauThu instance);
    partial void DeletetblCauThu(tblCauThu instance);
    partial void InserttblDoiBong(tblDoiBong instance);
    partial void UpdatetblDoiBong(tblDoiBong instance);
    partial void DeletetblDoiBong(tblDoiBong instance);
    #endregion
		
		public DBContextDataContext() : 
				base(global::DAL.Properties.Settings.Default.QLDoiBongConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblCauThu> tblCauThus
		{
			get
			{
				return this.GetTable<tblCauThu>();
			}
		}
		
		public System.Data.Linq.Table<tblDoiBong> tblDoiBongs
		{
			get
			{
				return this.GetTable<tblDoiBong>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCauThu")]
	public partial class tblCauThu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCauThu;
		
		private string _TenCauThu;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private string _IdDoiBong;
		
		private EntityRef<tblDoiBong> _tblDoiBong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCauThuChanging(string value);
    partial void OnMaCauThuChanged();
    partial void OnTenCauThuChanging(string value);
    partial void OnTenCauThuChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIdDoiBongChanging(string value);
    partial void OnIdDoiBongChanged();
    #endregion
		
		public tblCauThu()
		{
			this._tblDoiBong = default(EntityRef<tblDoiBong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauThu", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCauThu
		{
			get
			{
				return this._MaCauThu;
			}
			set
			{
				if ((this._MaCauThu != value))
				{
					this.OnMaCauThuChanging(value);
					this.SendPropertyChanging();
					this._MaCauThu = value;
					this.SendPropertyChanged("MaCauThu");
					this.OnMaCauThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCauThu", DbType="NVarChar(50)")]
		public string TenCauThu
		{
			get
			{
				return this._TenCauThu;
			}
			set
			{
				if ((this._TenCauThu != value))
				{
					this.OnTenCauThuChanging(value);
					this.SendPropertyChanging();
					this._TenCauThu = value;
					this.SendPropertyChanged("TenCauThu");
					this.OnTenCauThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NChar(10)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NChar(30)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDoiBong", DbType="NChar(10)")]
		public string IdDoiBong
		{
			get
			{
				return this._IdDoiBong;
			}
			set
			{
				if ((this._IdDoiBong != value))
				{
					if (this._tblDoiBong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDoiBongChanging(value);
					this.SendPropertyChanging();
					this._IdDoiBong = value;
					this.SendPropertyChanged("IdDoiBong");
					this.OnIdDoiBongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDoiBong_tblCauThu", Storage="_tblDoiBong", ThisKey="IdDoiBong", OtherKey="IdDoiBong", IsForeignKey=true)]
		public tblDoiBong tblDoiBong
		{
			get
			{
				return this._tblDoiBong.Entity;
			}
			set
			{
				tblDoiBong previousValue = this._tblDoiBong.Entity;
				if (((previousValue != value) 
							|| (this._tblDoiBong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblDoiBong.Entity = null;
						previousValue.tblCauThus.Remove(this);
					}
					this._tblDoiBong.Entity = value;
					if ((value != null))
					{
						value.tblCauThus.Add(this);
						this._IdDoiBong = value.IdDoiBong;
					}
					else
					{
						this._IdDoiBong = default(string);
					}
					this.SendPropertyChanged("tblDoiBong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDoiBong")]
	public partial class tblDoiBong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdDoiBong;
		
		private string _TenDoiBong;
		
		private EntitySet<tblCauThu> _tblCauThus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDoiBongChanging(string value);
    partial void OnIdDoiBongChanged();
    partial void OnTenDoiBongChanging(string value);
    partial void OnTenDoiBongChanged();
    #endregion
		
		public tblDoiBong()
		{
			this._tblCauThus = new EntitySet<tblCauThu>(new Action<tblCauThu>(this.attach_tblCauThus), new Action<tblCauThu>(this.detach_tblCauThus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDoiBong", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdDoiBong
		{
			get
			{
				return this._IdDoiBong;
			}
			set
			{
				if ((this._IdDoiBong != value))
				{
					this.OnIdDoiBongChanging(value);
					this.SendPropertyChanging();
					this._IdDoiBong = value;
					this.SendPropertyChanged("IdDoiBong");
					this.OnIdDoiBongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDoiBong", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDoiBong
		{
			get
			{
				return this._TenDoiBong;
			}
			set
			{
				if ((this._TenDoiBong != value))
				{
					this.OnTenDoiBongChanging(value);
					this.SendPropertyChanging();
					this._TenDoiBong = value;
					this.SendPropertyChanged("TenDoiBong");
					this.OnTenDoiBongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDoiBong_tblCauThu", Storage="_tblCauThus", ThisKey="IdDoiBong", OtherKey="IdDoiBong")]
		public EntitySet<tblCauThu> tblCauThus
		{
			get
			{
				return this._tblCauThus;
			}
			set
			{
				this._tblCauThus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblCauThus(tblCauThu entity)
		{
			this.SendPropertyChanging();
			entity.tblDoiBong = this;
		}
		
		private void detach_tblCauThus(tblCauThu entity)
		{
			this.SendPropertyChanging();
			entity.tblDoiBong = null;
		}
	}
}
#pragma warning restore 1591
